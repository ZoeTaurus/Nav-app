{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport DeviceSensor from \"./DeviceSensor\";\nimport ExponentMagnetometerUncalibrated from \"./ExponentMagnetometerUncalibrated\";\nexport var MagnetometerUncalibratedSensor = function (_DeviceSensor) {\n  function MagnetometerUncalibratedSensor() {\n    _classCallCheck(this, MagnetometerUncalibratedSensor);\n    return _callSuper(this, MagnetometerUncalibratedSensor, arguments);\n  }\n  _inherits(MagnetometerUncalibratedSensor, _DeviceSensor);\n  return _createClass(MagnetometerUncalibratedSensor);\n}(DeviceSensor);\nexport default new MagnetometerUncalibratedSensor(ExponentMagnetometerUncalibrated, 'magnetometerUncalibratedDidUpdate');","map":{"version":3,"names":["DeviceSensor","ExponentMagnetometerUncalibrated","MagnetometerUncalibratedSensor","_DeviceSensor","_classCallCheck","_callSuper","arguments","_inherits","_createClass"],"sources":["/Users/xinzan/Road time mesurment tool/node_modules/expo-sensors/src/MagnetometerUncalibrated.ts"],"sourcesContent":["import DeviceSensor from './DeviceSensor';\nimport ExponentMagnetometerUncalibrated from './ExponentMagnetometerUncalibrated';\n\n/**\n * Each of these keys represents the uncalibrated strength of magnetic field along that particular axis measured in microteslas (`Î¼T`).\n */\nexport type MagnetometerUncalibratedMeasurement = {\n  /**\n   * Value representing uncalibrated strength of magnetic field recorded in X axis.\n   */\n  x: number;\n  /**\n   * Value representing uncalibrated strength of magnetic field recorded in Y axis.\n   */\n  y: number;\n  /**\n   * Value representing uncalibrated strength of magnetic field recorded in Z axis.\n   */\n  z: number;\n};\n\n/**\n * @platform android\n * @platform ios\n */\nexport class MagnetometerUncalibratedSensor extends DeviceSensor<MagnetometerUncalibratedMeasurement> {}\n\nexport default new MagnetometerUncalibratedSensor(\n  ExponentMagnetometerUncalibrated,\n  'magnetometerUncalibratedDidUpdate'\n);\n"],"mappings":";;;;;;;AAAA,OAAOA,YAAY;AACnB,OAAOC,gCAAgC;AAwBvC,WAAaC,8BAA+B,aAAAC,aAAA;EAAA,SAAAD,+BAAA;IAAAE,eAAA,OAAAF,8BAAA;IAAA,OAAAG,UAAA,OAAAH,8BAAA,EAAAI,SAAA;EAAA;EAAAC,SAAA,CAAAL,8BAAA,EAAAC,aAAA;EAAA,OAAAK,YAAA,CAAAN,8BAAA;AAAA,EAAQF,YAAiD;AAErG,eAAe,IAAIE,8BAA8B,CAC/CD,gCAAgC,EAChC,mCAAmC,CACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}