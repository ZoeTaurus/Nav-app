{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nimport DeviceSensor from \"./DeviceSensor\";\nimport ExpoLightSensor from \"./ExpoLightSensor\";\nexport var LightSensor = function (_DeviceSensor) {\n  function LightSensor() {\n    _classCallCheck(this, LightSensor);\n    return _callSuper(this, LightSensor, arguments);\n  }\n  _inherits(LightSensor, _DeviceSensor);\n  return _createClass(LightSensor, [{\n    key: \"isAvailableAsync\",\n    value: (function () {\n      var _isAvailableAsync = _asyncToGenerator(function* () {\n        return _superPropGet(LightSensor, \"isAvailableAsync\", this, 3)([]);\n      });\n      function isAvailableAsync() {\n        return _isAvailableAsync.apply(this, arguments);\n      }\n      return isAvailableAsync;\n    }())\n  }, {\n    key: \"addListener\",\n    value: function addListener(listener) {\n      return _superPropGet(LightSensor, \"addListener\", this, 3)([listener]);\n    }\n  }]);\n}(DeviceSensor);\nexport default new LightSensor(ExpoLightSensor, 'lightSensorDidUpdate');","map":{"version":3,"names":["DeviceSensor","ExpoLightSensor","LightSensor","_DeviceSensor","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","_isAvailableAsync","_asyncToGenerator","_superPropGet","isAvailableAsync","apply","addListener","listener"],"sources":["/Users/xinzan/Road time mesurment tool/node_modules/expo-sensors/src/LightSensor.ts"],"sourcesContent":["import DeviceSensor from './DeviceSensor';\nimport type { Listener, Subscription } from './DeviceSensor';\nimport ExpoLightSensor from './ExpoLightSensor';\n\nexport type LightSensorMeasurement = {\n  /**\n   * Ambient light level registered by the device measured in lux (lx).\n   */\n  illuminance: number;\n};\n\n/**\n * @platform android\n */\nexport class LightSensor extends DeviceSensor<LightSensorMeasurement> {\n  /**\n   * > **info** You should always check the sensor availability before attempting to use it.\n   *\n   * Returns whether the light sensor is available and enabled on the device. Requires at least Android 2.3 (API Level 9).\n   *\n   * @return A promise that resolves to a `boolean` denoting the availability of the light sensor.\n   */\n  async isAvailableAsync(): Promise<boolean> {\n    return super.isAvailableAsync();\n  }\n\n  /**\n   * Subscribe for updates to the light sensor.\n   *\n   * @param listener A callback that is invoked when a LightSensor update is available. When invoked,\n   * the listener is provided a single argument that is the illuminance value.\n   *\n   * @return A subscription that you can call `remove()` on when you would like to unsubscribe the listener.\n   */\n  addListener(listener: Listener<LightSensorMeasurement>): Subscription {\n    return super.addListener(listener);\n  }\n}\n\nexport default new LightSensor(ExpoLightSensor, 'lightSensorDidUpdate');\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,YAAY;AAEnB,OAAOC,eAAe;AAYtB,WAAaC,WAAY,aAAAC,aAAA;EAAA,SAAAD,YAAA;IAAAE,eAAA,OAAAF,WAAA;IAAA,OAAAG,UAAA,OAAAH,WAAA,EAAAI,SAAA;EAAA;EAAAC,SAAA,CAAAL,WAAA,EAAAC,aAAA;EAAA,OAAAK,YAAA,CAAAN,WAAA;IAAAO,GAAA;IAAAC,KAAA;MAAA,IAAAC,iBAAA,GAAAC,iBAAA,CAQvB,aAAsB;QACpB,OAAAC,aAAA,CAAAX,WAAA;MACF,CAAC;MAAA,SAFKY,gBAAgBA,CAAA;QAAA,OAAAH,iBAAA,CAAAI,KAAA,OAAAT,SAAA;MAAA;MAAA,OAAhBQ,gBAAgB;IAAA;EAAA;IAAAL,GAAA;IAAAC,KAAA,EAYtB,SAAAM,WAAWA,CAACC,QAA0C;MACpD,OAAAJ,aAAA,CAAAX,WAAA,2BAAyBe,QAAQ;IACnC;EAAC;AAAA,EAtB8BjB,YAAoC;AAyBrE,eAAe,IAAIE,WAAW,CAACD,eAAe,EAAE,sBAAsB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}