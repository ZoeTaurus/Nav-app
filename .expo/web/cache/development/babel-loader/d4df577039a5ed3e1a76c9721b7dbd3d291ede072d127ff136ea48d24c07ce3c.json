{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport MapView, { Marker, Polyline, PROVIDER_GOOGLE } from 'react-native-maps';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { Accelerometer } from 'expo-sensors';\nimport { useRoute } from \"../context/RouteContext\";\nimport { useLocation } from \"../context/LocationContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar TrackingScreen = function TrackingScreen() {\n  var _useRoute = useRoute(),\n    selectedRoute = _useRoute.selectedRoute,\n    currentSession = _useRoute.currentSession,\n    startSession = _useRoute.startSession,\n    endSession = _useRoute.endSession,\n    addPointToSession = _useRoute.addPointToSession,\n    addSpeedBumpToSession = _useRoute.addSpeedBumpToSession,\n    addTrafficDataToSession = _useRoute.addTrafficDataToSession;\n  var _useLocation = useLocation(),\n    currentLocation = _useLocation.currentLocation,\n    isTracking = _useLocation.isTracking,\n    locationHistory = _useLocation.locationHistory,\n    startTracking = _useLocation.startTracking,\n    stopTracking = _useLocation.stopTracking,\n    hasLocationPermission = _useLocation.hasLocationPermission,\n    requestLocationPermission = _useLocation.requestLocationPermission;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isRecording = _useState2[0],\n    setIsRecording = _useState2[1];\n  var _useState3 = useState({\n      duration: 0,\n      distance: 0,\n      averageSpeed: 0,\n      maxSpeed: 0,\n      speedBumps: 0\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    sessionStats = _useState4[0],\n    setSessionStats = _useState4[1];\n  var _useState5 = useState({\n      x: 0,\n      y: 0,\n      z: 0\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    accelerometerData = _useState6[0],\n    setAccelerometerData = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    accelerometerSubscription = _useState8[0],\n    setAccelerometerSubscription = _useState8[1];\n  var lastAcceleration = useRef({\n    x: 0,\n    y: 0,\n    z: 0\n  });\n  var speedBumpThreshold = 2.5;\n  var lastSpeedBumpTime = useRef(0);\n  var _useState9 = useState(null),\n    _useState0 = _slicedToArray(_useState9, 2),\n    timer = _useState0[0],\n    setTimer = _useState0[1];\n  useEffect(function () {\n    if (!hasLocationPermission) {\n      requestLocationPermission();\n    }\n  }, []);\n  useEffect(function () {\n    Accelerometer.setUpdateInterval(100);\n    return function () {\n      if (accelerometerSubscription) {\n        accelerometerSubscription.remove();\n      }\n      if (timer) {\n        clearInterval(timer);\n      }\n    };\n  }, []);\n  useEffect(function () {\n    if (currentSession) {\n      updateSessionStats();\n    }\n  }, [currentSession]);\n  var updateSessionStats = function updateSessionStats() {\n    if (!currentSession) return;\n    var now = Date.now();\n    var duration = now - currentSession.startTime;\n    var distance = currentSession.distance;\n    var speeds = currentSession.points.map(function (p) {\n      return p.speed || 0;\n    }).filter(function (s) {\n      return s > 0;\n    });\n    var averageSpeed = speeds.length > 0 ? speeds.reduce(function (a, b) {\n      return a + b;\n    }, 0) / speeds.length : 0;\n    var maxSpeed = speeds.length > 0 ? Math.max.apply(Math, _toConsumableArray(speeds)) : 0;\n    setSessionStats({\n      duration: duration,\n      distance: distance,\n      averageSpeed: averageSpeed * 3.6,\n      maxSpeed: maxSpeed * 3.6,\n      speedBumps: currentSession.speedBumps.length\n    });\n  };\n  var startAccelerometer = function startAccelerometer() {\n    var subscription = Accelerometer.addListener(function (accelerometerData) {\n      setAccelerometerData(accelerometerData);\n      detectSpeedBump(accelerometerData);\n    });\n    setAccelerometerSubscription(subscription);\n  };\n  var stopAccelerometer = function stopAccelerometer() {\n    if (accelerometerSubscription) {\n      accelerometerSubscription.remove();\n      setAccelerometerSubscription(null);\n    }\n  };\n  var detectSpeedBump = function detectSpeedBump(accelData) {\n    var deltaX = Math.abs(accelData.x - lastAcceleration.current.x);\n    var deltaY = Math.abs(accelData.y - lastAcceleration.current.y);\n    var deltaZ = Math.abs(accelData.z - lastAcceleration.current.z);\n    var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ);\n    if (magnitude > speedBumpThreshold && currentLocation && currentSession) {\n      var now = Date.now();\n      if (now - lastSpeedBumpTime.current > 5000) {\n        lastSpeedBumpTime.current = now;\n        var speedBump = {\n          latitude: currentLocation.latitude,\n          longitude: currentLocation.longitude,\n          intensity: Math.min(Math.round(magnitude), 10),\n          timestamp: now\n        };\n        addSpeedBumpToSession(currentSession.id, speedBump);\n      }\n    }\n    lastAcceleration.current = accelData;\n  };\n  var handleStartTracking = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (!selectedRoute) {\n        Alert.alert('No Route Selected', 'Please select a route before starting tracking.');\n        return;\n      }\n      if (!hasLocationPermission) {\n        var granted = yield requestLocationPermission();\n        if (!granted) return;\n      }\n      try {\n        yield startTracking();\n        var sessionId = startSession(selectedRoute.id);\n        setIsRecording(true);\n        startAccelerometer();\n        var intervalId = setInterval(updateSessionStats, 1000);\n        setTimer(intervalId);\n        Alert.alert('Tracking Started', 'Your journey is now being recorded.');\n      } catch (error) {\n        console.error('Error starting tracking:', error);\n        Alert.alert('Error', 'Failed to start tracking. Please try again.');\n      }\n    });\n    return function handleStartTracking() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleStopTracking = function handleStopTracking() {\n    if (!currentSession) return;\n    Alert.alert('Stop Tracking', 'Are you sure you want to stop tracking? Your session will be saved.', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Stop',\n      style: 'default',\n      onPress: function onPress() {\n        stopTracking();\n        endSession(currentSession.id);\n        setIsRecording(false);\n        stopAccelerometer();\n        if (timer) {\n          clearInterval(timer);\n          setTimer(null);\n        }\n        Alert.alert('Session Saved', 'Your journey has been recorded and saved.');\n      }\n    }]);\n  };\n  useEffect(function () {\n    if (currentLocation && currentSession && isRecording) {\n      var point = {\n        latitude: currentLocation.latitude,\n        longitude: currentLocation.longitude,\n        timestamp: currentLocation.timestamp,\n        speed: currentLocation.speed || undefined,\n        accuracy: currentLocation.accuracy || undefined\n      };\n      addPointToSession(currentSession.id, point);\n      var now = new Date();\n      var trafficData = {\n        latitude: currentLocation.latitude,\n        longitude: currentLocation.longitude,\n        speed: (currentLocation.speed || 0) * 3.6,\n        timestamp: currentLocation.timestamp,\n        timeOfDay: `${now.getHours()}:${now.getMinutes().toString().padStart(2, '0')}`,\n        dayOfWeek: now.toLocaleDateString('en-US', {\n          weekday: 'long'\n        })\n      };\n      addTrafficDataToSession(currentSession.id, trafficData);\n    }\n  }, [currentLocation]);\n  var formatDuration = function formatDuration(milliseconds) {\n    var seconds = Math.floor(milliseconds / 1000);\n    var minutes = Math.floor(seconds / 60);\n    var hours = Math.floor(minutes / 60);\n    if (hours > 0) {\n      return `${hours}:${(minutes % 60).toString().padStart(2, '0')}:${(seconds % 60).toString().padStart(2, '0')}`;\n    } else {\n      return `${minutes}:${(seconds % 60).toString().padStart(2, '0')}`;\n    }\n  };\n  var StatCard = function StatCard(_ref2) {\n    var icon = _ref2.icon,\n      title = _ref2.title,\n      value = _ref2.value,\n      unit = _ref2.unit;\n    return _jsxs(View, {\n      style: styles.statCard,\n      children: [_jsx(Icon, {\n        name: icon,\n        size: 24,\n        color: \"#007AFF\"\n      }), _jsx(Text, {\n        style: styles.statValue,\n        children: value\n      }), unit && _jsx(Text, {\n        style: styles.statUnit,\n        children: unit\n      }), _jsx(Text, {\n        style: styles.statTitle,\n        children: title\n      })]\n    });\n  };\n  if (!selectedRoute) {\n    return _jsxs(View, {\n      style: styles.noRouteContainer,\n      children: [_jsx(Icon, {\n        name: \"map\",\n        size: 64,\n        color: \"#ccc\"\n      }), _jsx(Text, {\n        style: styles.noRouteTitle,\n        children: \"No Route Selected\"\n      }), _jsx(Text, {\n        style: styles.noRouteSubtitle,\n        children: \"Go to the Routes tab and select a route to start tracking\"\n      })]\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(MapView, {\n      style: styles.map,\n      provider: PROVIDER_GOOGLE,\n      initialRegion: {\n        latitude: selectedRoute.startPoint.latitude,\n        longitude: selectedRoute.startPoint.longitude,\n        latitudeDelta: 0.01,\n        longitudeDelta: 0.01\n      },\n      showsUserLocation: true,\n      followsUserLocation: isRecording,\n      children: [_jsx(Marker, {\n        coordinate: selectedRoute.startPoint,\n        title: \"Start\",\n        description: selectedRoute.startPoint.address,\n        pinColor: \"green\"\n      }), _jsx(Marker, {\n        coordinate: selectedRoute.endPoint,\n        title: \"End\",\n        description: selectedRoute.endPoint.address,\n        pinColor: \"red\"\n      }), _jsx(Polyline, {\n        coordinates: [selectedRoute.startPoint, selectedRoute.endPoint],\n        strokeColor: \"#007AFF\",\n        strokeWidth: 3,\n        lineDashPattern: [5, 5]\n      }), currentSession && currentSession.points.length > 1 && _jsx(Polyline, {\n        coordinates: currentSession.points,\n        strokeColor: \"#FF3B30\",\n        strokeWidth: 4\n      }), currentSession == null ? void 0 : currentSession.speedBumps.map(function (speedBump, index) {\n        return _jsx(Marker, {\n          coordinate: {\n            latitude: speedBump.latitude,\n            longitude: speedBump.longitude\n          },\n          title: `Speed Bump (${speedBump.intensity}/10)`,\n          pinColor: \"orange\",\n          children: _jsx(View, {\n            style: styles.speedBumpMarker,\n            children: _jsx(Icon, {\n              name: \"warning\",\n              size: 16,\n              color: \"white\"\n            })\n          })\n        }, index);\n      })]\n    }), _jsxs(View, {\n      style: styles.controlsContainer,\n      children: [_jsxs(View, {\n        style: styles.routeInfo,\n        children: [_jsx(Text, {\n          style: styles.routeTitle,\n          children: selectedRoute.name\n        }), _jsxs(Text, {\n          style: styles.routeSubtitle,\n          children: [selectedRoute.startPoint.address, \" \\u2192 \", selectedRoute.endPoint.address]\n        })]\n      }), isRecording && _jsxs(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        style: styles.statsContainer,\n        children: [_jsx(StatCard, {\n          icon: \"timer\",\n          title: \"Duration\",\n          value: formatDuration(sessionStats.duration)\n        }), _jsx(StatCard, {\n          icon: \"straighten\",\n          title: \"Distance\",\n          value: (sessionStats.distance / 1000).toFixed(2),\n          unit: \"km\"\n        }), _jsx(StatCard, {\n          icon: \"speed\",\n          title: \"Avg Speed\",\n          value: sessionStats.averageSpeed.toFixed(1),\n          unit: \"km/h\"\n        }), _jsx(StatCard, {\n          icon: \"trending-up\",\n          title: \"Max Speed\",\n          value: sessionStats.maxSpeed.toFixed(1),\n          unit: \"km/h\"\n        }), _jsx(StatCard, {\n          icon: \"warning\",\n          title: \"Speed Bumps\",\n          value: sessionStats.speedBumps.toString()\n        })]\n      }), isRecording && _jsxs(View, {\n        style: styles.sensorData,\n        children: [_jsx(Text, {\n          style: styles.sensorTitle,\n          children: \"Accelerometer\"\n        }), _jsxs(Text, {\n          style: styles.sensorValue,\n          children: [\"X: \", accelerometerData.x.toFixed(2), \" | Y: \", accelerometerData.y.toFixed(2), \" | Z: \", accelerometerData.z.toFixed(2)]\n        })]\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: !isRecording ? _jsxs(TouchableOpacity, {\n          style: styles.startButton,\n          onPress: handleStartTracking,\n          children: [_jsx(Icon, {\n            name: \"play-arrow\",\n            size: 32,\n            color: \"white\"\n          }), _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Start Tracking\"\n          })]\n        }) : _jsxs(TouchableOpacity, {\n          style: styles.stopButton,\n          onPress: handleStopTracking,\n          children: [_jsx(Icon, {\n            name: \"stop\",\n            size: 32,\n            color: \"white\"\n          }), _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Stop Tracking\"\n          })]\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  map: {\n    flex: 1\n  },\n  noRouteContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n    padding: 32\n  },\n  noRouteTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#666',\n    marginTop: 16\n  },\n  noRouteSubtitle: {\n    fontSize: 16,\n    color: '#999',\n    textAlign: 'center',\n    marginTop: 8,\n    lineHeight: 24\n  },\n  controlsContainer: {\n    backgroundColor: 'white',\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    paddingTop: 20,\n    paddingHorizontal: 20,\n    paddingBottom: 40,\n    elevation: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 10\n  },\n  routeInfo: {\n    marginBottom: 20\n  },\n  routeTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  routeSubtitle: {\n    fontSize: 14,\n    color: '#666',\n    marginTop: 4\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    marginBottom: 20\n  },\n  statCard: {\n    backgroundColor: '#f8f9fa',\n    borderRadius: 12,\n    padding: 16,\n    marginRight: 16,\n    alignItems: 'center',\n    minWidth: 80\n  },\n  statValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n    marginTop: 8\n  },\n  statUnit: {\n    fontSize: 12,\n    color: '#666'\n  },\n  statTitle: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 4,\n    textAlign: 'center'\n  },\n  sensorData: {\n    backgroundColor: '#f0f0f0',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 20\n  },\n  sensorTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 4\n  },\n  sensorValue: {\n    fontSize: 12,\n    color: '#666',\n    fontFamily: 'monospace'\n  },\n  buttonContainer: {\n    alignItems: 'center'\n  },\n  startButton: {\n    backgroundColor: '#34C759',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 32,\n    paddingVertical: 16,\n    borderRadius: 25,\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 4\n  },\n  stopButton: {\n    backgroundColor: '#FF3B30',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 32,\n    paddingVertical: 16,\n    borderRadius: 25,\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 4\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginLeft: 8\n  },\n  speedBumpMarker: {\n    backgroundColor: '#FF9500',\n    borderRadius: 12,\n    width: 24,\n    height: 24,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default TrackingScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","StyleSheet","TouchableOpacity","Alert","Dimensions","ScrollView","MapView","Marker","Polyline","PROVIDER_GOOGLE","Icon","Accelerometer","useRoute","useLocation","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","TrackingScreen","_useRoute","selectedRoute","currentSession","startSession","endSession","addPointToSession","addSpeedBumpToSession","addTrafficDataToSession","_useLocation","currentLocation","isTracking","locationHistory","startTracking","stopTracking","hasLocationPermission","requestLocationPermission","_useState","_useState2","_slicedToArray","isRecording","setIsRecording","_useState3","duration","distance","averageSpeed","maxSpeed","speedBumps","_useState4","sessionStats","setSessionStats","_useState5","x","y","z","_useState6","accelerometerData","setAccelerometerData","_useState7","_useState8","accelerometerSubscription","setAccelerometerSubscription","lastAcceleration","speedBumpThreshold","lastSpeedBumpTime","_useState9","_useState0","timer","setTimer","setUpdateInterval","remove","clearInterval","updateSessionStats","now","Date","startTime","speeds","points","map","p","speed","filter","s","length","reduce","a","b","Math","max","apply","_toConsumableArray","startAccelerometer","subscription","addListener","detectSpeedBump","stopAccelerometer","accelData","deltaX","abs","current","deltaY","deltaZ","magnitude","sqrt","speedBump","latitude","longitude","intensity","min","round","timestamp","id","handleStartTracking","_ref","_asyncToGenerator","alert","granted","sessionId","intervalId","setInterval","error","console","arguments","handleStopTracking","text","style","onPress","point","undefined","accuracy","trafficData","timeOfDay","getHours","getMinutes","toString","padStart","dayOfWeek","toLocaleDateString","weekday","formatDuration","milliseconds","seconds","floor","minutes","hours","StatCard","_ref2","icon","title","value","unit","styles","statCard","children","name","size","color","statValue","statUnit","statTitle","noRouteContainer","noRouteTitle","noRouteSubtitle","container","provider","initialRegion","startPoint","latitudeDelta","longitudeDelta","showsUserLocation","followsUserLocation","coordinate","description","address","pinColor","endPoint","coordinates","strokeColor","strokeWidth","lineDashPattern","index","speedBumpMarker","controlsContainer","routeInfo","routeTitle","routeSubtitle","horizontal","showsHorizontalScrollIndicator","statsContainer","toFixed","sensorData","sensorTitle","sensorValue","buttonContainer","startButton","buttonText","stopButton","create","flex","justifyContent","alignItems","backgroundColor","padding","fontSize","fontWeight","marginTop","textAlign","lineHeight","borderTopLeftRadius","borderTopRightRadius","paddingTop","paddingHorizontal","paddingBottom","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","marginBottom","flexDirection","borderRadius","marginRight","minWidth","fontFamily","paddingVertical","marginLeft"],"sources":["/Users/xinzan/Road time mesurment tool/src/screens/TrackingScreen.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Alert,\n  Dimensions,\n  ScrollView,\n} from 'react-native';\nimport MapView, { Marker, Polyline, PROVIDER_GOOGLE } from 'react-native-maps';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport { Accelerometer } from 'expo-sensors';\nimport { useRoute, RoutePoint, SpeedBumpData, TrafficData } from '../context/RouteContext';\nimport { useLocation } from '../context/LocationContext';\n\nconst { width, height } = Dimensions.get('window');\n\nconst TrackingScreen: React.FC = () => {\n  const {\n    selectedRoute,\n    currentSession,\n    startSession,\n    endSession,\n    addPointToSession,\n    addSpeedBumpToSession,\n    addTrafficDataToSession,\n  } = useRoute();\n  \n  const {\n    currentLocation,\n    isTracking,\n    locationHistory,\n    startTracking,\n    stopTracking,\n    hasLocationPermission,\n    requestLocationPermission,\n  } = useLocation();\n\n  const [isRecording, setIsRecording] = useState(false);\n  const [sessionStats, setSessionStats] = useState({\n    duration: 0,\n    distance: 0,\n    averageSpeed: 0,\n    maxSpeed: 0,\n    speedBumps: 0,\n  });\n  \n  // Accelerometer data for speed bump detection\n  const [accelerometerData, setAccelerometerData] = useState({ x: 0, y: 0, z: 0 });\n  const [accelerometerSubscription, setAccelerometerSubscription] = useState<any>(null);\n  const lastAcceleration = useRef({ x: 0, y: 0, z: 0 });\n  const speedBumpThreshold = 2.5; // Threshold for detecting speed bumps\n  const lastSpeedBumpTime = useRef(0);\n\n  // Timer for updating session stats\n  const [timer, setTimer] = useState<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    if (!hasLocationPermission) {\n      requestLocationPermission();\n    }\n  }, []);\n\n  useEffect(() => {\n    // Set up accelerometer\n    Accelerometer.setUpdateInterval(100); // Update every 100ms\n    \n    return () => {\n      if (accelerometerSubscription) {\n        accelerometerSubscription.remove();\n      }\n      if (timer) {\n        clearInterval(timer);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    // Update session stats when currentSession changes\n    if (currentSession) {\n      updateSessionStats();\n    }\n  }, [currentSession]);\n\n  const updateSessionStats = () => {\n    if (!currentSession) return;\n\n    const now = Date.now();\n    const duration = now - currentSession.startTime;\n    const distance = currentSession.distance;\n    const speeds = currentSession.points.map(p => p.speed || 0).filter(s => s > 0);\n    const averageSpeed = speeds.length > 0 ? speeds.reduce((a, b) => a + b, 0) / speeds.length : 0;\n    const maxSpeed = speeds.length > 0 ? Math.max(...speeds) : 0;\n\n    setSessionStats({\n      duration,\n      distance,\n      averageSpeed: averageSpeed * 3.6, // Convert m/s to km/h\n      maxSpeed: maxSpeed * 3.6, // Convert m/s to km/h\n      speedBumps: currentSession.speedBumps.length,\n    });\n  };\n\n  const startAccelerometer = () => {\n    const subscription = Accelerometer.addListener(accelerometerData => {\n      setAccelerometerData(accelerometerData);\n      detectSpeedBump(accelerometerData);\n    });\n    setAccelerometerSubscription(subscription);\n  };\n\n  const stopAccelerometer = () => {\n    if (accelerometerSubscription) {\n      accelerometerSubscription.remove();\n      setAccelerometerSubscription(null);\n    }\n  };\n\n  const detectSpeedBump = (accelData: { x: number; y: number; z: number }) => {\n    // Calculate the magnitude of acceleration change\n    const deltaX = Math.abs(accelData.x - lastAcceleration.current.x);\n    const deltaY = Math.abs(accelData.y - lastAcceleration.current.y);\n    const deltaZ = Math.abs(accelData.z - lastAcceleration.current.z);\n    \n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ);\n    \n    // Detect speed bump if acceleration change is above threshold\n    if (magnitude > speedBumpThreshold && currentLocation && currentSession) {\n      const now = Date.now();\n      \n      // Prevent multiple detections within 5 seconds\n      if (now - lastSpeedBumpTime.current > 5000) {\n        lastSpeedBumpTime.current = now;\n        \n        const speedBump: Omit<SpeedBumpData, 'userId'> = {\n          latitude: currentLocation.latitude,\n          longitude: currentLocation.longitude,\n          intensity: Math.min(Math.round(magnitude), 10),\n          timestamp: now,\n        };\n        \n        addSpeedBumpToSession(currentSession.id, speedBump);\n      }\n    }\n    \n    lastAcceleration.current = accelData;\n  };\n\n  const handleStartTracking = async () => {\n    if (!selectedRoute) {\n      Alert.alert('No Route Selected', 'Please select a route before starting tracking.');\n      return;\n    }\n\n    if (!hasLocationPermission) {\n      const granted = await requestLocationPermission();\n      if (!granted) return;\n    }\n\n    try {\n      await startTracking();\n      const sessionId = startSession(selectedRoute.id);\n      setIsRecording(true);\n      startAccelerometer();\n      \n      // Start timer to update stats every second\n      const intervalId = setInterval(updateSessionStats, 1000);\n      setTimer(intervalId);\n      \n      Alert.alert('Tracking Started', 'Your journey is now being recorded.');\n    } catch (error) {\n      console.error('Error starting tracking:', error);\n      Alert.alert('Error', 'Failed to start tracking. Please try again.');\n    }\n  };\n\n  const handleStopTracking = () => {\n    if (!currentSession) return;\n\n    Alert.alert(\n      'Stop Tracking',\n      'Are you sure you want to stop tracking? Your session will be saved.',\n      [\n        { text: 'Cancel', style: 'cancel' },\n        {\n          text: 'Stop',\n          style: 'default',\n          onPress: () => {\n            stopTracking();\n            endSession(currentSession.id);\n            setIsRecording(false);\n            stopAccelerometer();\n            \n            if (timer) {\n              clearInterval(timer);\n              setTimer(null);\n            }\n            \n            Alert.alert('Session Saved', 'Your journey has been recorded and saved.');\n          },\n        },\n      ]\n    );\n  };\n\n  // Add location points to session\n  useEffect(() => {\n    if (currentLocation && currentSession && isRecording) {\n      const point: RoutePoint = {\n        latitude: currentLocation.latitude,\n        longitude: currentLocation.longitude,\n        timestamp: currentLocation.timestamp,\n        speed: currentLocation.speed || undefined,\n        accuracy: currentLocation.accuracy || undefined,\n      };\n      \n      addPointToSession(currentSession.id, point);\n      \n      // Add traffic data\n      const now = new Date();\n      const trafficData: Omit<TrafficData, 'userId'> = {\n        latitude: currentLocation.latitude,\n        longitude: currentLocation.longitude,\n        speed: (currentLocation.speed || 0) * 3.6, // Convert to km/h\n        timestamp: currentLocation.timestamp,\n        timeOfDay: `${now.getHours()}:${now.getMinutes().toString().padStart(2, '0')}`,\n        dayOfWeek: now.toLocaleDateString('en-US', { weekday: 'long' }),\n      };\n      \n      addTrafficDataToSession(currentSession.id, trafficData);\n    }\n  }, [currentLocation]);\n\n  const formatDuration = (milliseconds: number): string => {\n    const seconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    \n    if (hours > 0) {\n      return `${hours}:${(minutes % 60).toString().padStart(2, '0')}:${(seconds % 60).toString().padStart(2, '0')}`;\n    } else {\n      return `${minutes}:${(seconds % 60).toString().padStart(2, '0')}`;\n    }\n  };\n\n  const StatCard: React.FC<{ icon: string; title: string; value: string; unit?: string }> = ({\n    icon,\n    title,\n    value,\n    unit,\n  }) => (\n    <View style={styles.statCard}>\n      <Icon name={icon} size={24} color=\"#007AFF\" />\n      <Text style={styles.statValue}>{value}</Text>\n      {unit && <Text style={styles.statUnit}>{unit}</Text>}\n      <Text style={styles.statTitle}>{title}</Text>\n    </View>\n  );\n\n  if (!selectedRoute) {\n    return (\n      <View style={styles.noRouteContainer}>\n        <Icon name=\"map\" size={64} color=\"#ccc\" />\n        <Text style={styles.noRouteTitle}>No Route Selected</Text>\n        <Text style={styles.noRouteSubtitle}>\n          Go to the Routes tab and select a route to start tracking\n        </Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <MapView\n        style={styles.map}\n        provider={PROVIDER_GOOGLE}\n        initialRegion={{\n          latitude: selectedRoute.startPoint.latitude,\n          longitude: selectedRoute.startPoint.longitude,\n          latitudeDelta: 0.01,\n          longitudeDelta: 0.01,\n        }}\n        showsUserLocation={true}\n        followsUserLocation={isRecording}\n      >\n        {/* Route markers */}\n        <Marker\n          coordinate={selectedRoute.startPoint}\n          title=\"Start\"\n          description={selectedRoute.startPoint.address}\n          pinColor=\"green\"\n        />\n        <Marker\n          coordinate={selectedRoute.endPoint}\n          title=\"End\"\n          description={selectedRoute.endPoint.address}\n          pinColor=\"red\"\n        />\n        \n        {/* Route line */}\n        <Polyline\n          coordinates={[selectedRoute.startPoint, selectedRoute.endPoint]}\n          strokeColor=\"#007AFF\"\n          strokeWidth={3}\n          lineDashPattern={[5, 5]}\n        />\n        \n        {/* Tracked path */}\n        {currentSession && currentSession.points.length > 1 && (\n          <Polyline\n            coordinates={currentSession.points}\n            strokeColor=\"#FF3B30\"\n            strokeWidth={4}\n          />\n        )}\n        \n        {/* Speed bumps */}\n        {currentSession?.speedBumps.map((speedBump, index) => (\n          <Marker\n            key={index}\n            coordinate={{\n              latitude: speedBump.latitude,\n              longitude: speedBump.longitude,\n            }}\n            title={`Speed Bump (${speedBump.intensity}/10)`}\n            pinColor=\"orange\"\n          >\n            <View style={styles.speedBumpMarker}>\n              <Icon name=\"warning\" size={16} color=\"white\" />\n            </View>\n          </Marker>\n        ))}\n      </MapView>\n\n      <View style={styles.controlsContainer}>\n        {/* Route info */}\n        <View style={styles.routeInfo}>\n          <Text style={styles.routeTitle}>{selectedRoute.name}</Text>\n          <Text style={styles.routeSubtitle}>\n            {selectedRoute.startPoint.address} → {selectedRoute.endPoint.address}\n          </Text>\n        </View>\n\n        {/* Stats */}\n        {isRecording && (\n          <ScrollView \n            horizontal \n            showsHorizontalScrollIndicator={false} \n            style={styles.statsContainer}\n          >\n            <StatCard\n              icon=\"timer\"\n              title=\"Duration\"\n              value={formatDuration(sessionStats.duration)}\n            />\n            <StatCard\n              icon=\"straighten\"\n              title=\"Distance\"\n              value={(sessionStats.distance / 1000).toFixed(2)}\n              unit=\"km\"\n            />\n            <StatCard\n              icon=\"speed\"\n              title=\"Avg Speed\"\n              value={sessionStats.averageSpeed.toFixed(1)}\n              unit=\"km/h\"\n            />\n            <StatCard\n              icon=\"trending-up\"\n              title=\"Max Speed\"\n              value={sessionStats.maxSpeed.toFixed(1)}\n              unit=\"km/h\"\n            />\n            <StatCard\n              icon=\"warning\"\n              title=\"Speed Bumps\"\n              value={sessionStats.speedBumps.toString()}\n            />\n          </ScrollView>\n        )}\n\n        {/* Accelerometer data (for development) */}\n        {isRecording && (\n          <View style={styles.sensorData}>\n            <Text style={styles.sensorTitle}>Accelerometer</Text>\n            <Text style={styles.sensorValue}>\n              X: {accelerometerData.x.toFixed(2)} | \n              Y: {accelerometerData.y.toFixed(2)} | \n              Z: {accelerometerData.z.toFixed(2)}\n            </Text>\n          </View>\n        )}\n\n        {/* Control buttons */}\n        <View style={styles.buttonContainer}>\n          {!isRecording ? (\n            <TouchableOpacity\n              style={styles.startButton}\n              onPress={handleStartTracking}\n            >\n              <Icon name=\"play-arrow\" size={32} color=\"white\" />\n              <Text style={styles.buttonText}>Start Tracking</Text>\n            </TouchableOpacity>\n          ) : (\n            <TouchableOpacity\n              style={styles.stopButton}\n              onPress={handleStopTracking}\n            >\n              <Icon name=\"stop\" size={32} color=\"white\" />\n              <Text style={styles.buttonText}>Stop Tracking</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  map: {\n    flex: 1,\n  },\n  noRouteContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n    padding: 32,\n  },\n  noRouteTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#666',\n    marginTop: 16,\n  },\n  noRouteSubtitle: {\n    fontSize: 16,\n    color: '#999',\n    textAlign: 'center',\n    marginTop: 8,\n    lineHeight: 24,\n  },\n  controlsContainer: {\n    backgroundColor: 'white',\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    paddingTop: 20,\n    paddingHorizontal: 20,\n    paddingBottom: 40,\n    elevation: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: -2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 10,\n  },\n  routeInfo: {\n    marginBottom: 20,\n  },\n  routeTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  routeSubtitle: {\n    fontSize: 14,\n    color: '#666',\n    marginTop: 4,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    marginBottom: 20,\n  },\n  statCard: {\n    backgroundColor: '#f8f9fa',\n    borderRadius: 12,\n    padding: 16,\n    marginRight: 16,\n    alignItems: 'center',\n    minWidth: 80,\n  },\n  statValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n    marginTop: 8,\n  },\n  statUnit: {\n    fontSize: 12,\n    color: '#666',\n  },\n  statTitle: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 4,\n    textAlign: 'center',\n  },\n  sensorData: {\n    backgroundColor: '#f0f0f0',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 20,\n  },\n  sensorTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 4,\n  },\n  sensorValue: {\n    fontSize: 12,\n    color: '#666',\n    fontFamily: 'monospace',\n  },\n  buttonContainer: {\n    alignItems: 'center',\n  },\n  startButton: {\n    backgroundColor: '#34C759',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 32,\n    paddingVertical: 16,\n    borderRadius: 25,\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n  },\n  stopButton: {\n    backgroundColor: '#FF3B30',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 32,\n    paddingVertical: 16,\n    borderRadius: 25,\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginLeft: 8,\n  },\n  speedBumpMarker: {\n    backgroundColor: '#FF9500',\n    borderRadius: 12,\n    width: 24,\n    height: 24,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default TrackingScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}