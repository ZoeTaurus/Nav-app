{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport RouteSelectionScreen from \"./src/screens/RouteSelectionScreen\";\nimport TrackingScreen from \"./src/screens/TrackingScreen\";\nimport AnalyticsScreen from \"./src/screens/AnalyticsScreen\";\nimport SettingsScreen from \"./src/screens/SettingsScreen\";\nimport { LocationProvider } from \"./src/context/LocationContext\";\nimport { RouteProvider } from \"./src/context/RouteContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(LocationProvider, {\n    children: _jsx(RouteProvider, {\n      children: _jsxs(NavigationContainer, {\n        children: [_jsx(StatusBar, {\n          style: \"auto\"\n        }), _jsxs(Tab.Navigator, {\n          initialRouteName: \"Home\",\n          screenOptions: function screenOptions(_ref) {\n            var route = _ref.route;\n            return {\n              tabBarIcon: function tabBarIcon(_ref2) {\n                var focused = _ref2.focused,\n                  color = _ref2.color,\n                  size = _ref2.size;\n                var iconName;\n                if (route.name === 'Home') {\n                  iconName = 'home';\n                } else if (route.name === 'Routes') {\n                  iconName = 'map';\n                } else if (route.name === 'Track') {\n                  iconName = 'gps-fixed';\n                } else if (route.name === 'Analytics') {\n                  iconName = 'analytics';\n                } else if (route.name === 'Settings') {\n                  iconName = 'settings';\n                }\n                return _jsx(Icon, {\n                  name: iconName,\n                  size: size,\n                  color: color\n                });\n              },\n              tabBarActiveTintColor: '#007AFF',\n              tabBarInactiveTintColor: 'gray',\n              headerStyle: {\n                backgroundColor: '#007AFF'\n              },\n              headerTintColor: '#fff',\n              headerTitleStyle: {\n                fontWeight: 'bold'\n              }\n            };\n          },\n          children: [_jsx(Tab.Screen, {\n            name: \"Home\",\n            component: HomeScreen,\n            options: {\n              title: 'Dashboard'\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"Routes\",\n            component: RouteSelectionScreen,\n            options: {\n              title: 'Select Route'\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"Track\",\n            component: TrackingScreen,\n            options: {\n              title: 'Track Journey'\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"Analytics\",\n            component: AnalyticsScreen,\n            options: {\n              title: 'Route Analytics'\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"Settings\",\n            component: SettingsScreen,\n            options: {\n              title: 'Settings'\n            }\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","StatusBar","StyleSheet","Icon","HomeScreen","RouteSelectionScreen","TrackingScreen","AnalyticsScreen","SettingsScreen","LocationProvider","RouteProvider","jsx","_jsx","jsxs","_jsxs","Tab","App","children","style","Navigator","initialRouteName","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","Screen","component","options","title","styles","create","container","flex","alignItems","justifyContent"],"sources":["/Users/xinzan/Road time mesurment tool/App.tsx"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet } from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\n\n// Screens\nimport HomeScreen from './src/screens/HomeScreen';\nimport RouteSelectionScreen from './src/screens/RouteSelectionScreen';\nimport TrackingScreen from './src/screens/TrackingScreen';\nimport AnalyticsScreen from './src/screens/AnalyticsScreen';\nimport SettingsScreen from './src/screens/SettingsScreen';\n\n// Providers\nimport { LocationProvider } from './src/context/LocationContext';\nimport { RouteProvider } from './src/context/RouteContext';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    <LocationProvider>\n      <RouteProvider>\n        <NavigationContainer>\n          <StatusBar style=\"auto\" />\n          <Tab.Navigator\n            initialRouteName=\"Home\"\n            screenOptions={({ route }) => ({\n              tabBarIcon: ({ focused, color, size }) => {\n                let iconName;\n\n                if (route.name === 'Home') {\n                  iconName = 'home';\n                } else if (route.name === 'Routes') {\n                  iconName = 'map';\n                } else if (route.name === 'Track') {\n                  iconName = 'gps-fixed';\n                } else if (route.name === 'Analytics') {\n                  iconName = 'analytics';\n                } else if (route.name === 'Settings') {\n                  iconName = 'settings';\n                }\n\n                return <Icon name={iconName} size={size} color={color} />;\n              },\n              tabBarActiveTintColor: '#007AFF',\n              tabBarInactiveTintColor: 'gray',\n              headerStyle: {\n                backgroundColor: '#007AFF',\n              },\n              headerTintColor: '#fff',\n              headerTitleStyle: {\n                fontWeight: 'bold',\n              },\n            })}\n          >\n            <Tab.Screen \n              name=\"Home\" \n              component={HomeScreen}\n              options={{ title: 'Dashboard' }}\n            />\n            <Tab.Screen \n              name=\"Routes\" \n              component={RouteSelectionScreen}\n              options={{ title: 'Select Route' }}\n            />\n            <Tab.Screen \n              name=\"Track\" \n              component={TrackingScreen}\n              options={{ title: 'Track Journey' }}\n            />\n            <Tab.Screen \n              name=\"Analytics\" \n              component={AnalyticsScreen}\n              options={{ title: 'Route Analytics' }}\n            />\n            <Tab.Screen \n              name=\"Settings\" \n              component={SettingsScreen}\n              options={{ title: 'Settings' }}\n            />\n          </Tab.Navigator>\n        </NavigationContainer>\n      </RouteProvider>\n    </LocationProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}